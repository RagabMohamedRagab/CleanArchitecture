// <auto-generated />
using System;
using CleanArchitecture.Infrastructure.ContextDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitecture.Infrastructure.Migrations
{
    [DbContext(typeof(SchoolProjectDbContext))]
    [Migration("20250826204457_add-schemas")]
    partial class addschemas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArchitecture.Data.Entities.DepartMent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartMent", "Dep");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.DepartMentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartMentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("DepartMentSubjects");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartMentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartMentId");

                    b.ToTable("Student", "Std");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.StudentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Peroid")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subject", "Sub");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.DepartMentSubject", b =>
                {
                    b.HasOne("CleanArchitecture.Data.Entities.DepartMent", "DepartMent")
                        .WithMany("DepartMentSubjects")
                        .HasForeignKey("DepartMentId");

                    b.HasOne("CleanArchitecture.Data.Entities.Subject", "Subject")
                        .WithMany("DepartMentSubjects")
                        .HasForeignKey("SubjectId");

                    b.Navigation("DepartMent");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.Student", b =>
                {
                    b.HasOne("CleanArchitecture.Data.Entities.DepartMent", "DepartMent")
                        .WithMany("Students")
                        .HasForeignKey("DepartMentId");

                    b.Navigation("DepartMent");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.StudentSubject", b =>
                {
                    b.HasOne("CleanArchitecture.Data.Entities.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId");

                    b.HasOne("CleanArchitecture.Data.Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.DepartMent", b =>
                {
                    b.Navigation("DepartMentSubjects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("CleanArchitecture.Data.Entities.Subject", b =>
                {
                    b.Navigation("DepartMentSubjects");

                    b.Navigation("StudentSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
